/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:GuiRemoteProtocol
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "GuiRemoteProtocolParser.h"

namespace vl::presentation::remoteprotocol
{
	void GuiRemoteProtocolParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 4844; // 63334 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 236;
		static const vl::vint dataSolidRows = 18;
		static const vl::vint dataRows = 19;
		static const char* compressed[] = {
			"\x66\xF7\x00\x00\xE4\x12\x00\x00\x19\x00\x01\x82\x80\x0F\x03\x82\x81\x82\x06\x89\x82\x8B\x0A\x86\x06\x84\x0B\x0A\x9A\x0A\x81\x1A\x80\x16\x85\x17\x0A\xB5\x0A\x9B\x1A\x83\x22\x85\x24\x0A\xD0\x0A\x96\x2A\x82\x2E\x84\x75\x09\x09\xBF\x6B\x9C\x93\x96\x84\x00\x2D\xAD\xAF\x91\x9C\x93\x98\x9B\x7F\x36\xB4\xB9\x91\x9B\x9A\x9A\x85\x9B\x38\xBF\xB7\x8F\x9F\x91\x02\x84\xA3\x09\xC8\x86\x82\x07\xA2\x87\x01\xA6\x09\x84\x10\xA6\x80\xA5\x9D\x9A\x85\x05\x53\x83\x95\xA2\xA2\x9D\xAE\x9E\x5F\xBE\xAA\x83\xA1\xB7\xAB\xB0\xAF\x67\xE0\xA9\xA2\xB4\xAC\xB3\xB4\xB3\x6D\xE8\xB1\xAA\xB3\xBC\xB7\xAC\xB7\x75\xF0\xB7\xB2\xBB\xBC\xB9\xBE\xBB\x02\xDC\xAF\xAE\x95\xB4\xC3\xC1\xA0\x87\xD6\x86\xD9\xBB\xC7\xBE\xBD\xC0\x78\x8E\xCD\xD0\xCC\xBC\xCA\xBE\xCB\x80\x81\x82\xCC\xC8\xC4\xCE\xC5\xCE\x92\xA0\xC2\x86\x0A\xAA\x83\x03\xD2\x9A\x91\xD8\xCF\xC9\xD5\xC9\xD7\xCB\xAF\x99\xF0\x8A\xD1\xDC\xD7\xD8\xD7\xB7\xB0\xF9\xD2\xDB\xC9\xD3\xCF\xDF\x85\xA2\xF5\xD3\xC3\xE2\xE3\xDC\xDB\xBD\xAB\xC4\xE7\xEB\xE1\xE5\xE2\xE0\x89\x8A\x88\x08\xD0\x01\x95\xA5\xE0\xD0\x9E\xD8\xFB",
			"\xE1\xED\xEE\xEC\xEF\xBE\xDC\xDF\xE3\xF1\xF0\xF2\xE4\xE3\xCE\xCC\xE8\xF4\xDA\xF1\xED\xF2\xF2\xE7\xEE\xC2\x8A\x04\xEC\x87\xEA\xF3\xCF\xE2\xEF\xFB\xF1\xFA\xFD\xFE\xFC\xED\x7E\x79\x7C\x80\xE9\x45\x8C\x7A\x81\xB8\x48\x8A\x6E\x82\xBC\x47\x8E\x80\x6E\x0C\x14\x7D\x00\x75\x0C\x88\x7F\x83\x82\x17\x8D\x89\x81\x86\x16\x9B\x8E\x84\x86\x1F\x9A\x80\x8B\x88\x22\xA5\x8D\x84\x89\x27\xA6\x8D\x70\x87\xCB\x4E\x47\x7E\x41\x08\x46\x4A\x50\x7F\x03\xB0\x75\x8C\x8D\x01\x84\x8C\x8B\x7A\x21\xA9\x8E\x8F\x8A\x3D\x80\x98\x8A\x90\x2A\xBC\x83\x92\x91\x45\xB2\x77\x8E\x40\x10\x14\x71\x04\x85\x3B\x8A\x99\x8E\x8D\x53\xB8\x85\x84\x91\x3F\x88\x99\x96\x94\x57\x9A\x98\x97\x97\x5E\xA1\x9C\x95\x94\x02\x80\x02\x04\x75\x13\x10\x91\x92\x98\x65\x9D\x93\x9B\x9A\x6F\x87\x91\x9D\x92\x6D\xA4\x9A\x8C\x9C\x75\xB8\x97\x9E\x9C\x79\xBC\x9B\x9C\x9D\x7F\x9B\x9D\x9C\xA0\x54\xAE\x93\xA2\xA0\x09\x54\x0A\x9A\x9F\x85\xB6\x9D\xA2\x9E\x8F\x8C\xA6\x96\xA3\x93\x90\xA5\xA6\xA4\xFF\x51\xA4\xA0\x8E\x15\x0B\xAB\xA5\xA6\x97\x9F\xAB\x93\xA8\x55\xA0\xA6\xA8\xA9\x86\x81\xA0\x9B\x9C",
			"\x88\x94\x90\x47\x8B\xA1\xAD\xA1\xAF\xAA\x87\xB4\xAA\xA8\x9B\xB7\xAC\xA6\xAE\xA6\xB2\xA7\xA5\xA8\xAA\x94\xBE\xA9\xA8\xAF\xBB\xB3\xA8\xAC\xB1\xC7\x86\xBF\x4B\x05\x9E\xBD\xA0\xB2\xA5\xC2\x81\xBF\xB0\xA6\xD3\xA2\xAF\xAF\xB5\xC3\x8A\xB5\xAD\xB2\xD1\x90\xB5\xB6\xB3\xD8\x92\xB1\xBA\xB7\xE3\x94\xB5\xBA\xB5\xD9\x9D\xBA\x6C\x06\xCD\x85\xBA\xB8\xBA\xE2\xA9\xBF\xB6\xBB\xF3\x9C\xB5\xBE\xAE\xF6\xA7\xB0\xBA\xBC\xFA\xB4\xBD\xBD\xBE\xFC\x81\xC1\xBF\xC0\xE4\x82\xC5\xC0\xC1\xE6\x80\x40\xAF\xBB\xFB\x88\xC0\xBF\xC1\x10\xE6\xB6\xC2\xC4\x0E\xCD\xC1\xC7\xC3\x14\xD7\xC0\xBA\x44\x0B\xC1\x4B\x05\xBB\x00\xD5\xCE\xBF\xC4\x18\xE5\xC6\xC5\xC6\x28\xF2\x6C\x04\xC8\xF8\xAD\xCB\xB6\xCB\xB9\xAF\xC2\xCD\xCC\x34\xC8\xB0\xCE\xCD\x33\xF8\xC5\xCC\x8E\x1D\x2C\xC9\xCE\xB6\x00\x9E\x0E\xCF\xCE\x0C\xE3\xC2\xC9\xC8\x1A\xC6\xD9\xD0\xD2\x29\xE7\xC6\xCA\xD2\x4D\xD0\xDF\xD0\xD3\x53\xF7\xC0\xD2\xCE\x58\xD7\xD8\x8F\x07\x43\xD9\xD5\xD0\xD5\x4E\xE1\xD2\xD6\xD8\x60\xE3\xDE\xBC\x08\x5D\xDA\xDF\xD6\xD5\x6B\xFF\xCD\xD8\xD1\xF7\xAE\xD1\xDC\xDC\xFF\xAC\xD3\xDE\xD7\x77",
			"\xEA\xD9\xDE\x40\x14\x5D\xC5\xDE\xDC\x7F\xF4\xD4\xC8\xD9\x76\xC1\xE8\xDE\xE1\x7A\xC8\xEF\xDB\xE1\x83\xE6\xD5\xDB\xE3\x85\xCD\xE0\xE4\xE0\x92\xD2\x92\x09\xDA\x8B\xF8\x83\x08\xE6\x7B\xDD\xEA\xE2\xE7\x95\xD4\xE7\xD1\xE4\xA3\xE2\xEB\xD0\xE9\xA7\xE6\xE1\xD7\xE4\x82\xE5\xED\xE9\xEA\xAF\xEB\xE8\xEA\xEC\xAA\xD5\xD0\xE0\x09\x9C\xDF\xEA\xED\xE8\xB1\xF6\xED\xEC\xE1\xB5\xC0\xFF\xEF\x72\x25\x39\xE6\x09\xEE\xBC\xCC\xEE\xEA\xF2\xB0\xCC\xF4\xEF\xF0\xAC\xC6\x47\x09\xEE\x16\x7E\xD9\xF1\xE2\xD7\xC2\x49\x08\xF2\xCB\xD8\xFD\xF5\xE6\xE0\xE0\xEF\xF6\xF8\xCD\xDE\xF5\xF9\xF8\xBB\xE3\xF9\xFB\xF9\xE4\xFA\x6A\x08\xF7\xEC\xEB\xFF\xF3\xE1\x2B\x30\xF3\xFE\xF9\xF7\xE8\xF9\xF5\xFB\xBE\xCE\xFD\xFC\xFE\xFF\x7A\x7E\xFA\x7B\x72\x7F\x00\xBC\x7A\x78\xFE\x68\x80\x00\x8A\x82\x81\xF8\x44\x84\x5F\x2C\x16\x7E\x01\x85\x8C\x81\x03\x8E\x73\x76\x13\x8D\x04\x75\x2E\x04\x3A\x8C\x3E\x68\x06\xD4\x31\x06\x04\xB6\x32\x07\x11\x97\x81\x78\x27\x80\x43\x0C\x26\x81\x7B\x05\xA9\x81\x81\x2F\x8E\x85\x0B\x8D\x89\x7E\x0B\xB3\x86\x86\x18\x95\x80\x05\xB1\x84\x87\x09\x84\x84",
			"\x06\x2C\x99\x84\x0F\xB8\x88\x85\x1B\xBB\x86\x88\x0F\x82\x5E\x46\x56\x73\x81\x26\xB8\x36\x06\x41\x85\x8A\x10\xC8\x8E\x89\x1A\x87\x8B\x8A\x58\x92\x8A\x16\xD0\x79\x8A\x2E\x9B\x88\x86\x54\x8E\x81\x15\xBE\x83\x8C\x1D\xBC\x5F\x06\x51\x9E\x8A\x1A\xE0\x82\x4A\x1C\x29\x8C\x8D\x5F\x92\x85\x17\xD4\x49\x07\x37\xB2\x89\x8E\xE8\x7A\x06\x1D\xBD\x86\x8D\x32\x83\x8A\x77\x1C\x2C\x8A\x18\x83\x96\x5C\x1E\x3B\x8C\x88\x6B\x97\x8D\x22\xFC\x8F\x8F\x24\x84\x94\x8C\x8F\x9D\x8D\x24\x8D\x9A\x7D\x1E\x07\x97\x8A\x78\x88\x90\x1C\x80\x4E\x07\x4B\x8E\x96\x8A\x9F\x90\x90\x28\xFE\x81\x8D\x51\x93\x95\x94\xA2\x89\x96\x24\xA6\x9C\x94\x55\x94\x91\x7E\x3F\x14\x38\x10\x54\x31\x08\xEA\x02\x0C\x3A\x1E\x22\x92\xB9\x44\x0E\x92\x52\xB3\x88\x47\x45\x1D\x97\x29\xBF\x9C\x90\x54\xAB\x96\x95\xC6\x8F\x95\x2B\xC7\x9C\x98\x65\x88\x9C\x98\x9A\x89\x72\x11\x42\x9B\x98\x67\x8D\x99\x99\xD8\x90\x98\x26\x80\x47\x08\x6A\x8F\x99\x93\xD7\x48\x0A\x37\xD7\x9A\x9B\x50\xA4\x98\x9C\xE6\x96\x9A\x3A\xD9\x98\x9C\x5F\xAD\x9B\x98\xEF\x95\x9A\x11\xA0\x2E\x6E\x25\x14\x3B\x09\xD4\x2C",
			"\x08\x75\x4D\x07\x92\x27\x23\x9B\x9D\xE5\x8C\x3F\x13\x7F\x9C\x9D\x45\x91\x9D\x98\x01\xB0\x9E\x41\xDB\x9B\x93\x86\x8A\x96\xA1\x08\xB1\x9F\x37\x89\x22\x24\x5D\x93\xA0\xA2\x07\xB9\xA0\x43\x8F\xAC\xA3\x88\x89\x21\x0A\x04\xA9\xA2\xB9\x52\x01\xA4\x89\xA7\x9B\xA1\xE9\x85\xA0\x46\x9B\xAE\xA3\x95\xA9\xA2\xA4\x17\xBD\xA2\x46\xAF\xA6\xA4\x80\xB5\xA6\x38\x53\x05\xA4\x4A\xEE\x9B\xA7\xF8\x54\x0C\x3A\x55\x1A\xA6\x4B\xBC\xA6\x20\x92\x16\xA7\xA4\x43\xAA\xA1\x52\xBA\x37\x0A\xA1\xB2\xA4\xA5\xA4\x58\x0A\x53\xAD\xAF\xA8\x9A\xBD\xA2\x9E\x30\xBA\x85\x16\x53\xA3\xA6\x71\x66\x27\xA8\x36\xB7\xA9\x4C\xD4\xA4\xAD\xAE\x8A\xAD\xAA\x44\xA8\xAF\x59\xE5\xAA\x77\x2D\x1C\xA8\xAA\x70\xB6\xAB\xE1\x5C\x0F\xAC\xB9\xAA\xA8\xAB\x37\xB9\xA9\x58\xCB\xA3\xAC\xB3\xB8\xAA\xAC\x48\xB7\xAD\x5F\xF0\xAD\x0A\xEA\x1E\x0C\x3A\x5F\x14\x38\x18\x54\x31\x0D\x4B\xA2\x0D\xAE\x69\xAC\xAF\x18\x10\xBB\xAC\xBF\x83\xB6\xAE\x6C\xB8\xB2\x65\x81\xB9\xB3\xC8\x9B\xB3\xAF\x82\xB6\x34\x19\x14\xBF\xAE\xBE\x9C\xB7\xB3\x2A\xA1\xB7\x72\x65\x04\xB5\xCB\x9E\xB0\x00\x66\x0D\xB7\x69\xF1",
			"\xAF\xB4\xCD\xB4\xB5\xB2\xB7\xA5\xB6\x6A\xA9\xBD\xB2\xDC\xB6\xB7\xB7\xB5\xAA\x7F\x19\x32\xB0\xB5\xDE\xBA\xB0\x7D\x68\x04\xB8\x6F\xA8\xBF\x25\x34\x0A\xBA\xAF\xCB\xB9\xB6\x6B\xBE\xBF\xB4\x35\x0F\xB9\xAF\x0A\x2B\x0F\x75\x80\xB5\xB8\xE6\x98\xBC\xBB\xD1\xA0\xB8\x75\xE3\xB7\xB8\x52\x6C\x0B\xBB\xA6\xBD\xBB\xB5\x6D\x04\x3A\x37\x14\x3F\x0D\x97\x90\x0C\x7A\xBB\xB0\xBB\xFA\x9F\xB9\xBD\xE1\xA1\xB8\x79\xD3\xB5\xBC\xDD\x71\x0B\xBE\xC6\xBC\xBE\x80\xB3\xB2\xBC\x2B\xB2\x08\xC0\xDE\xA0\xBE\x7D\x8A\xC7\xBF\xC4\x73\x08\xC1\xD2\xA4\xC2\x7E\xFD\xB5\xC1\x09\xB4\x08\xC2\x15\xD2\xC3\x7E\x9A\xC4\xC3\x09\xF2\x35\x0E\xD4\x36\x0C\x75\x77\x07\x92\x3C\x18\xC6\xC3\xE0\x59\x0F\x89\x9B\xCA\xBD\x0C\xED\xC0\xC5\x2F\xCC\xC5\x7E\xB8\x3A\x0E\xEA\x3B\x0C\x3A\x7C\x17\x91\x1F\x2B\xCD\xC2\x72\x7E\x0C\xC7\x13\x9F\x0C\x90\x9C\xC3\xC1\x18\xFD\xC7\xC8\x45\xC6\x38\x20\x54\x31\x10\xEA\x02\x17\x92\x83\x03\xCA\x91\xD6\x54\x10\x29\xF3\xC0\xC9\x44\xD9\xCB\x94\xDA\xC7\xCA\x6B\x45\x17\x92\x86\x14\x3B\x21\x54\x38\x11\x4B\x89\x16\xCA\x0B\xD4\x4A\x22\x68\xC0\x71\x45",
			"\x17\x94\x11\xD4\x2D\x10\x75\x0E\x17\x93\x47\x2C\xCC\xC1\x00\x50\x13\x9D\x87\x74\x01\x19\x41\x24\x29\x09\x34\x3F\x61\x00\xD6\x20\x41\xDC\x34\xD0\x03\x26\xD1\x68\x08\xD3\x3F\xE0\x0C\xD1\x20\x8A\xC7\x3F\xA3\x80\x06\x3E\x64\x40\x2E\x3A\x06\x2E\x44\x67\x7E\xC4\x28\xF5\x18\xD3\x20\x13\x47\x31\x56\x07\x30\x28\x4E\xC4\x2F\xD2\x0A\x21\xD4\x67\x23\xDC\x32\xA0\x27\x34\xD4\x37\x33\xD3\x67\x53\x30\xD6\x9A\x1F\xD5\xD3\xEA\x26\xD7\x53\x07\x37\xD7\x80\x2A\xD1\x34\xAC\xC1\x35\xA9\xCE\x21\x39\x5E\xC0\x07\xD7\xE7\x21\xDB\x79\x2E\xD1\x38\xA0\x32\xD1\x38\xB4\xCD\xD7\x4D\x46\xDF\x32\x53\xD3\xD0\xD5\x09\x28\xD9\x71\x4A\xD5\x39\x61\xC9\x27\xDA\xD3\xC9\xD5\x70\x5C\xDA\x3C\x66\xF5\xD1\x26\xCF\xC7\x31\xB4\xC2\xD1\xDC\x5C\xE7\x3E\xD4\xA6\xD8\xDA\x41\x5A\xDA\x3C\x72\xC0\x2E\xDB\x32\x45\xDA\xB8\xA2\xDD\xD9\x9B\x2F\xD2\xDA\x34\x29\xDC\x67\x6B\xDB\xD9\x76\xEE\xD9\xD7\x0A\x32\x28\xAF\xFB\xDB\xD5\x7E\xF4\x26\xD4\x0A\xFC\x32\xB1\xF4\xD0\x28\x7B\xF7\xDC\x26\xFF\xCC\xDD\xC0\x87\xE5\x38\x82\xDD\xDE\xE0\xEE\xD5\xE2\xC3\xB1\x26\xE3\x8B\xED\x21\xE3",
			"\x05\xFB\xE0\xC7\xC0\x2E\xE3\x72\xE0\xE0\xD7\x22\xE7\xDD\x4B\x25\xE6\xE5\x95\x28\xE7\xE3\x2A\xE7\xE0\xCB\xA3\xED\x24\x6A\xDB\x5A\xDE\x03\x31\xDD\xAC\xAC\x80\xE8\x81\x20\xDB\x4D\x45\xE1\x22\xD0\xB4\x24\xE7\x9A\xD3\xD1\xE2\xC6\x49\xE8\x00\x24\x3C\xDE\x99\xEC\x23\xD2\xBB\xD6\xD3\xCB\x81\x20\xEA\x49\xC9\xE7\xE7\x5B\xF3\xEA\xA3\xDF\xE7\x56\xA9\xD4\xED\xE1\x56\xEB\x27\xA4\x9A\xD1\xEB\xB0\xCF\x4B\xD0\x0A\x31\xD1\x71\x13\xD2\xEE\xF5\x34\xEB\xEC\x81\xD8\xED\xA1\xFA\xE3\x21\x4A\xED\xEE\xD6\x0D\x23\xDC\xCF\xD7\xEC\xE1\xBF\xF1\x26\xD8\x5D\xF3\xED\xE0\xF0\xE9\x20\xB6\xC9\xDB\xF0\x6A\xF2\x38\xDF\x8D\xDC\xF1\xBD\xD5\xF1\xD1\x93\xF0\xD1\xE6\x80\x05\xEE\x67\xCA\x26\xEF\x5F\x72\xEA\xE3\xDB\xD0\xF3\x7F\x13\xD6\xD8\x9E\xF9\xEF\xE5\x94\xF7\xD1\xB8\xDB\xF5\xF3\x43\xEA\xF5\xEB\x89\x20\xF5\x7A\x62\xF2\xF0\x69\xE6\xF6\x42\x37\xEF\x5E\xA9\xC9\xF6\xEE\x92\xEB\xF5\x40\x28\xF1\xF6\x83\x04\xFC\xE9\xA5\xF3\xD3\xD9\x8B\xDE\xF4\xE1\xDC\xF7\xF5\xD0\xEE\xF8\xEC\xB9\xED\xEE\xB0\xC0\xF5\xF1\xB8\xE0\xE0\xBA\xD8\x26\xFB\xC3\xE4\xEB\xF6\x06\x2B\xFB",
			"\xE3\xB9\xF9\xEA\x8D\xDB\xF9\x21\xE5\xE7\x3D\xFA\xB8\xE7\xFD\x79\xC1\x3B\xFD\x2E\xF4\xFA\x69\x6F\xF9\xF8\xEE\xC7\x37\xF7\x35\xF3\xE5\xE9\xF8\xF9\xFF\x95\x0D\xEE\xE4\xFC\x7D\x7F\xFF\x77\x71\x01\x89\x7F\x03\x87\x6F\xF0\x7D\x7F\x2B\x19\x80\x0A\x88\x75\xF4\x74\x7E\xF5\x79\x6D\x0F\x8A\x7D\x2D\x1C\x80\xFD\x73\x69\xBC\x70\x14\x16\x89\x7F\x1B\x8E\x74\xF6\x7C\x19\x1D\x86\x72\x93\x6B\x74\x31\x11\x82\x17\x7E\x80\x87\x16\x82\xF7\x63\x69\x14\x77\x13\x2A\x89\x7A\x06\x19\x81\x2E\x81\x81\x06\x17\x80\x23\x89\x7D\xE6\x7D\x12\x93\x61\x21\x29\x85\x7A\x2F\x85\x7C\x03\x1A\x82\x3B\x83\x81\x39\x8C\x12\x3F\x82\x7F\xBE\x6B\x79\x3C\x80\x82\x3E\x84\x83\x03\x12\x83\x48\x80\x00\x4B\x81\x1A\x47\x85\x82\x4E\x82\x10\x36\x8A\x10\x53\x8A\x7E\x57\x8A\x74\x38\x89\x72\x56\x80\x81\xB9\x78\x82\x4C\x82\x86\x14\x84\x78\x12\x8D\x83\x66\x85\x84\x91\x79\x10\x50\x81\x86\x67\x8B\x80\x5D\x80\x00\x07\x85\x85\x3A\x80\x32\x07\x8A\x81\x4D\x83\x86\xC4\x6A\x86\x71\x8F\x0F\x76\x88\x86\xEE\x7E\x87\x6C\x80\x88\x73\x8F\x86\x15\x8B\x87\x7F\x83\x69\x75\x83\x87\x24\x8D",
			"\x73\x1F\x81\x1A\xC6\x67\x80\xC6\x67\x26\x0B\x79\x10\x4D\x27\x89\x06\x19\x89\x12\x7F\x79\xFA\x69\x10\x5B\x85\x1C\xC6\x67\x7C\xDE\x72\x7B\x92\x8D\x7C\x9D\x89\x10\x2D\x72\x75\x88\x8C\x12\x05\x85\x73\xC6\x6A\x82\xAF\x86\x72\xB1\x8F\x89\x30\x26\x8B\x03\x11\x23\xA7\x89\x10\xBA\x87\x1E\x8D\x5C\x71\xD6\x6D\x87\x06\x10\x7F\xC4\x82\x8C\x41\x8F\x7D\x03\x14\x6E\xE2\x71\x10\xCB\x82\x76\x09\x1D\x8C\xD0\x8B\x7B\xD2\x8E\x86\xD3\x81\x83\xD5\x83\x10\x2D\x76\x6C\x75\x75\x7B\x94\x6E\x89\xB4\x7E\x8D\x06\x1C\x8D\xA1\x87\x6C\x8B\x77\x8B\x98\x8A\x10\x6F\x73\x88\x06\x19\x8E\x03\x13\x7A\x00\x0C\x8E\x07\x18\x8E\x0A\x1C\x89\x03\x16\x89\x06\x19\x26\x69\x87\x8F\xE5\x83\x10\xF8\x86\x8E\xFA\x87\x8E\x89\x2A\x10\x9D\x29\x10\xF0\x89\x84\x09\x13\x90\xEB\x8B\x8F\x02\x18\x90\x03\x15\x90\x04\x12\x90\xF2\x80\x90\x06\x1C\x90\x02\x16\x8F\x03\x1F\x2A\x09\x99\x8F\x17\x91\x91\x99\x6F\x10\x1C\x99\x8B\x1E\x94\x90\xF3\x81\x92\x06\x16\x91\x02\x1C\x2C\x22\x9A\x91\x27\x9F\x91\x02\x1E\x8E\x28\x99\x91\xFE\x83\x10\x2F\x9D\x90\x23\x99\x10\x33\x95\x91\x0A\x1C\x2E",
			"\x7E\x34\x91\x9D\x6F\x88\xB6\x10\x7F\x42\x3C\x71\x2F\x11\x0F\xD4\x10\x94\x42\x9F\x12\xF2\x04\x1D\x2F\x17\x3C\x47\x99\x10\xF3\x04\x1D\xE4\x61\x41\x4D\x96\x10\xF4\x00\x95\x0A\x12\x95\x53\x92\x10\xF5\x0A\x94\x0A\x1B\x42\x59\x92\x10\xF6\x0C\x95\x09\x15\x47\x5F\x91\x10\xF7\x04\x1D\xBC\x71\x4B\x65\x90\x00\xF8\x04\x1D\x2D\x73\x4B\x6B\x99\x0F\x6E\x9A\x10\x70\x95\x96\xFA\x02\x96\x06\x1D\x4D\x6B\x9B\x0F\xD4\x15\x77\xFC\x4B\x96\xFC\x04\x1D\xBF\x74\x52\x1C\x7A\x82\x2F\x1D\x8C\x41\x55\x98\x65\x26\x6C\x3F\x5A\x98\x00\x2C\x8D\x39\x5E\x98\x54\x23\x8E\x5B\x52\x99\x03\x1D\x0F\xD4\x13\x69\x52\x5B\x96\xFE\x04\x1D\x94\x92\x94\x09\x89\x99\x0A\x1B\x99\x6B\x9C\x69\xA6\x64\x6F\x74\x55\x9A\xA6\x95\x78\x02\x15\x58\x6B\x92\x00\xAB\x9A\x92\x01\x1E\x9A\x65\x93\x00\xB1\x96\x10\x91\x02\x94\x47\x7A\x1B\x47\x9E\x93\xFE\x2F\x12\x07\x8D\x9B\x97\x4F\x12\xB3\x8B\x1C\x2F\x17\x83\x74\x3F\x12\x86\x90\x9A\xC3\x9A\x10\xCD\x89\x1E\xC4\x9D\x9C\xD4\x80\x20\xC0\x94\x1D\xCD\x8B\x9B\xB2\x18\x9C\x54\x2F\x12\x2D\x7B\x9C\x00\x27\x77\xD4\x90\x8E\x03\x1D\x8C\x0E",
			"\x9E\x9B\xC6\x10\x7F\xE6\x97\x94\x26\x91\x10\xDE\x94\x25\xF0\x73\x7D\xBC\x90\x91\xCF\x8A\x10\x1F\x30\x56\xC6\x1F\x7B\xE9\x92\x94\x2B\x38\x7E\x80\x3F\x7B\xF0\x92\x1B\x2F\x1C\x35\xF3\x99\x10\xC5\x36\x9F\xD5\x96\xA0\x42\x9C\x94\xC3\x80\x38\xE4\x6F\x9F\xB6\x1F\x12\xDB\x33\xA0\x06\x1E\x41\xF9\x60\x20\xCD\x89\x9F\x1C\x70\x42\xFC\x94\x37\xCD\x8E\xA0\xC6\x9D\x95\xCE\x9A\x10\x64\x95\xA1\x54\x2C\x7B\x18\xA7\x70\x7A\x48\xA0\x00\x2C\x7B\x1E\xA6\x1C\x2F\x11\x48\x06\x1F\x7B\x6A\x94\xA2\x38\x2D\x72\x27\xAE\x6E\x75\x91\x74\x80\x3D\x72\x2D\xA7\x94\xB5\x41\x15\x0A\x11\x4C\x2A\xA6\x7C\xC1\x7B\x9D\xE0\x45\x77\xA4\x80\xA0\xE0\x4C\x8D\x2D\x88\x1B\x52\x23\x4D\xDF\x65\x26\xF4\x63\x8E\xD0\x90\x4E\xEE\x84\x8F\xBE\x2F\x12\xE2\x43\xA4\x38\x28\xA5\x01\x1E\x90\x55\xA0\x20\xF4\x4B\x14\x65\x2E\x90\x8A\x21\x9E\x0B\x5E\x90\xEB\x97\x2D\xDA\x4B\xA6\x4D\xA1\x9F\x00\x28\x4F\x51\xA0\x8C\x0A\x1D\x8F\x03\x17\xA6\x46\xAB\x50\x78\xA0\x92\x68\xA6\x10\x7F\x94\xA3\xE8\x3C\x93\x00\x06\xA7\x59\xA0\x4E\x18\x93\x10\x0A\x39\xA7\x06\x1E\x4F\x7E\x33\x50\x73\xA4",
			"\x25\x3A\x96\x10\x37\x94\x2A\x2F\x10\x52\x5C\xAE\x2B\x89\xA3\x10\x91\xA8\x23\xDA\x4C\x31\x06\x1B\x9F\x8A\xA3\x10\x84\x90\xA8\x9E\x30\xAA\x03\x18\x36\x7D\xA8\x23\x91\x94\xA6\x00\x2D\x33\x09\x19\xA9\x85\xA9\x10\x89\x94\xAA\x00\x06\x54\xAC\xA4\xAB\xA6\x6E\xAA\x06\x12\xA0\xA1\xAC\x56\x41\x96\x10\xB0\xA4\xA9\xA3\x94\x1D\x95\x97\xAB\x03\x1A\x9D\x03\x1F\xAB\x03\x1C\xAB\x9C\xA0\x4E\xCC\xA2\x10\xF5\x9D\xAB\x01\x1E\x56\x97\xA4\x2A\xA8\xA6\x10\xBA\xAD\xAC\x0B\x5D\x37\x06\x1B\x39\xA9\xA2\x10\xA9\x94\xAB\xFC\x2E\xAD\xD2\x35\x26\x52\x24\x9B\xC7\xA5\x26\xB8\x3F\xA8\xDA\xA6\x10\x89\x55\xAD\x00\x08\x9E\x0A\x1B\xAE\x35\x86\xAE\x0A\x1B\x58\xF0\xA8\x9F\xF3\xA8\x8C\xB1\xA6\x10\xBF\x82\xAE\xEC\x14\x6E\xA6\x64\xAF\xC7\x8F\xAD\x01\x1F\x58\xF0\xA7\xA1\xFB\xA2\xA1\xED\xA3\x10\x93\x50\xAF\x26\xAB\xB0\xD6\x86\xB0\x00\x03\x5A\x7E\x3C\x5A\xEC\xA2\x10\x36\xAA\x10\x05\xA6\x10\x97\x34\xB1\xC3\x50\xAF\xE9\x1A\xA0\x03\x1D\xB1\x0D\xBC\x56\xD3\x39\x10\x04\xBD\xAF\x4F\x55\x3D\x06\x1F\x3E\x14\xB9\x5C\x22\xBC\x1E\x30\xB6\x10\x1C\x44\xB1\xE9\x1E\x5C",
			"\x19\xB4\x2A\xF5\x39\x10\xE4\xA7\xB2\x01\x1A\x5D\xF0\xA6\x6C\xA6\x6D\xB3\x06\x1A\x41\x38\xBA\x3E\x58\x93\x10\x3F\xBC\xB2\x02\x17\x5E\xF0\xA5\x77\xA6\x6B\xB4\x02\x18\xB4\xD2\xA0\x57\x56\xB3\x10\x11\xA7\xB5\xEC\x53\xB3\xB8\x17\xB3\x06\x16\xB4\x40\xB0\x57\x14\xA3\x10\x40\x44\xB1\xEE\x5E\xB5\xBA\x12\x42\x3B\xBC\xA6\x0A\x10\x5F\xF0\xAC\x8D\xA6\x6C\xB6\xF5\xA4\xB1\xF2\x50\xAF\xE3\x83\xB7\xFC\xA2\xAC\x09\x1F\x5F\xF0\xA4\x6F\x7A\xBB\xA1\x57\xB7\x60\xF0\xAE\x8E\x81\xB1\x7E\xF6\xA9\x10\x0F\x60\xAF\xBD\x8E\x85\x09\x14\xB7\x4F\x89\xB8\x06\x17\x61\x7E\x30\x62\x6D\xBE\xA5\x00\x06\x6A\x25\x49\x10\x1A\xA7\xB5\x24\x6A\xB6\xB2\x1E\x95\x06\x1B\xB9\x57\xBF\x43\x0A\x10\xB9\x4E\xBA\x51\x4B\x46\x10\x29\xA7\xB5\x26\x60\xBA\xB6\x18\x46\x6D\xB1\xA6\x06\x1A\x62\xF0\xA5\x9E\x0A\x12\xBB\x75\xB7\xB5\x35\x60\xAF\x6B\xA6\x6A\xBA\xB3\x10\xC5\x9E\xA2\x0A\x17\x63\xF0\xA4\xA8\x8E\xB6\x10\xC1\xB2\x10\xED\x9E\x6E\x39\x60\xAF\x7B\xA2\x10\xC0\xB1\xA2\x14\xBB\x63\xF0\xA2\xA8\xD3\xB3\x9D\x57\xBF\x63\x7E\x32\x64\x6D\xB7\xA8\xD2\xBA\x10\x6E\x49\x10\x50",
			"\x44\xB1\x4D\x60\xBB\xCB\x13\xA2\x03\x13\xBE\xA5\xBA\x3E\xAD\xB3\x10\xCB\xBC\xB7\x2B\x50\xA3\x03\x16\x49\x14\xBF\x64\xE8\xB6\x1C\xF6\xB6\x10\xB7\x49\xB4\xB8\x11\x65\xB3\xBC\x1E\x9D\x49\x10\x67\xB7\xB5\x5F\x60\xAF\x93\xA9\xB9\x0A\x13\xC0\xAC\xB2\xB9\x03\x11\x66\xF0\xAB\xA9\xE1\xB9\x10\x0C\xC3\x10\x3F\xAD\xBE\xB0\x4A\x10\xEF\xB9\xBA\x00\x03\x66\xF0\xA1\xAC\x0A\xC9\x10\x33\xA6\xC1\x0E\xCC\x56\x39\xA2\x10\x17\xC3\xB6\x04\x49\xC2\x02\x16\x48\x14\xB5\x66\xF9\xBF\x12\xFD\xB6\x10\x15\xCC\xC1\x04\x49\x4B\x06\x1B\xA5\x57\xB7\x66\x31\xC1\xA4\x0A\x18\x9D\x0F\xAA\x10\x6B\x60\xAF\x9E\xAA\xA3\x09\x12\xA4\xBB\xB3\xB6\x6E\x60\xAF\xD1\xA6\xC4\x06\x18\xC4\xC2\xB5\xC2\x01\x10\x67\xF0\xA6\xAA\x13\xCF\xC4\xC6\x8C\xC1\x72\x60\xAF\xD9\xA7\xC5\x03\x10\xC5\xA3\x12\xC5\x00\x04\x67\xF0\xAA\xAC\x5E\xC2\x10\x60\xC1\x10\xAD\x8F\xA1\x09\x16\x67\x7E\x3A\x67\x6D\xBF\xAC\xC9\xB3\x10\x50\xA6\x10\xBC\x44\xB1\x92\x07\x49\x7A\x96\x10\x75\xCA\xC2\xEA\x3A\xC3\x5F\xC2\xC6\x04\x43\xA6\x03\x12\xA7\x57\xB3\x09\x97\x46\xC8\x03\x1E\xA8\x18\xCA\x1B\x94\x0F",
			"\xC3\x65\x2A\x4F\x09\x10\xC8\x1C\xC6\x09\xB9\x37\xAD\x4E\xC3\x10\x92\xCB\xA8\x82\xCA\x3E\x7F\xA3\x10\x8C\xAD\xC8\x13\x41\xCA\x03\x16\x4F\x14\xB7\x09\x97\x4C\xC8\x9A\xCD\xC9\xF1\x35\x51\x9F\xA2\xC6\x98\x00\xC9\x00\x2C\xAD\x99\xC2\x10\xAE\xC3\x10\x35\xB3\xB6\x9A\x02\xCB\x54\x2F\xB1\xB4\xA7\xCB\x02\x1B\xBF\x63\xBC\x09\xBC\xCA\x39\xD4\x10\xCC\x01\x1A\xC8\x1C\xCE\x09\xC5\xCE\x2B\x2B\xB3\xC7\x02\x13\xAA\x03\x16\xA9\x57\xB0\x0A\xCD\xCE\x39\xAB\xA3\xCD\x62\xC2\x0A\xD7\xCA\x3B\x8D\x96\x10\xD4\xC3\xB6\xA4\x0D\xCD\xFC\x23\xAB\xDA\xC4\xB1\xA6\x04\xCE\xE2\x26\xAB\x03\x16\xC5\xF2\xB3\x10\xA8\x09\xC5\xA4\x26\xB2\x46\x73\x12\x0A\x19\xCB\x1C\xCB\x0A\xF2\xC7\x2D\x29\xB6\xAC\x02\x1C\xCE\xC1\xC2\xC6\xAE\x0B\xCF\xE9\x1B\xB5\xE9\xA9\x10\x00\xD9\xCC\x62\xC1\x0B\x04\xDC\x1E\x62\xB5\xCF\x08\xD5\x93\x57\xB4\x0B\xEA\xC8\x1B\x59\xB7\xC6\x01\x14\x9A\xED\xC2\xC6\xB6\x05\xD1\xBA\x10\xB6\x07\xD6\x10\x1A\xD2\x10\xF8\xCF\xCE\x02\x18\x0B\x1E\xD2\x1B\x9D\xB1\xD2\x03\x13\xD2\x01\x12\xCC\x1C\xCA\x0B\x29\xD4\x42\xDD\xCE\xD2\x00\x0A\xCC\x26\xD1\x10",
			"\xBC\x03\xD3\xCB\x15\xC0\x2C\xD2\x10\x36\xD8\xB9\xB4\xB3\x10\xBE\x09\x3B\xE5\xB4\xAB\xC5\xA3\x10\x4D\x54\xB1\xBF\x07\x49\x5F\x5F\xCA\x14\xB0\x0C\x7B\xB7\x2D\xF1\xB1\xAF\x25\x17\xCF\x62\xC4\x0C\x53\xD9\x1E\x1B\xCC\x9E\x57\xD9\x10\x30\xD9\xD3\x00\x08\x0C\x5B\xDC\x1E\x61\xD6\xD5\x09\x1F\xD4\x85\xC2\xC6\xCC\x05\xD6\xB8\x17\xC2\x5E\xD9\xD6\x12\xD3\xB6\xD0\x0D\xD0\xB8\x18\xC3\x3F\xD1\x10\xE1\xA3\x10\xD4\xA7\xB5\xD3\x07\x49\x7B\xD2\x10\xEE\xCE\xB6\x09\x14\x0D\x76\xDA\x1B\x69\xC8\xD6\x06\x11\xD8\x01\x15\xD2\x84\xD6\x10\xD7\x07\xD8\xB2\x14\xC9\x71\xDB\xD8\x0A\x17\xD6\x43\xD2\x10\xDA\x02\xD9\xB6\x18\xD3\x8A\xD3\x10\x8C\xD7\xD3\x62\xCD\x0D\x9C\xDB\x1C\xA4\xCC\xBC\x0A\x11\xDA\x42\xDC\x1E\x2F\x10\x0E\x3C\xD6\x1C\xE1\xC0\xD1\x06\x18\xAE\x02\x1D\xD7\x63\xB2\x0E\x97\x44\xDB\x01\x13\xD8\x99\xD1\x10\xE3\x05\xDA\x38\x5B\xCF\xBA\xD0\x00\x8E\xDD\xDB\x00\x06\x0E\xC0\xDF\x12\x09\xDF\xD9\xAD\x97\xD9\x62\xC9\x0E\xC9\xDA\x10\x49\xD8\xDA\x09\x13\xDC\x9E\xD6\xDC\xEC\x01\xDD\x09\x11\xDA\xF0\x73\xDC\xAB\xDE\xA4\x0A\x1F\x0E\xAF\xDF\x12\xEF",
			"\xAE\xCF\x01\x17\x58\x2B\x7C\xDA\xF7\x6B\x96\xD4\xDC\x71\x02\x74\xAB\x44\x1F\x7B\x44\x14\x6E\x44\x1D\x8C\xF5\xD7\x94\xF6\xD9\x9E\xE6\x9F\x0F\xA6\x64\x14\x40\xCE\x12\xFF\xDD\x86\xEE\xD7\x94\xEF\xD9\xD7\x9D\x65\xE0\xB2\xD7\x70\x86\x9F\x82\xF0\x74\x14\x0D\xE1\x9D\x89\x13\xBC\xFF\x02\xDF\x10\xEC\x71\x14\xE3\xD5\xF1\xD7\x94\xC1\x99\x87\xF4\xD7\xA0\x1C\x7D\xE1\x91\x8E\x6E\x20\xEC\xB0\xF1\x1F\x9C\x40\x16\xDF\x87\x98\xDF\x2A\xE2\x94\x28\xE7\x8D\xF1\x1B\xC6\x36\x77\x94\xBC\x74\x14\x33\xEF\x12\x35\xE5\xA4\xBE\x1B\x8A\x3B\x72\x94\x2D\x74\x14\x3D\xEC\x9D\x47\x99\xA4\x35\x12\xE4\x2C\x1E\x73\x0A\x16\xE4\x09\x18\xE4\x44\xA2\x94\x4A\xE3\x10\x4D\xEC\x7A\xBE\x1D\xA2\xFF\x05\x77\x44\x14\xE5\x2F\x16\xE5\xA8\x87\x70\xDC\x85\x15\x5B\xE0\x14\xDC\x84\x14\x5F\xEF\x12\x61\xE2\x9E\xEE\x63\xE6\xA0\x88\x1D\x54\xA0\x14\xE3\x84\x14\xE3\x8D\xE0\xE3\x82\x6B\x79\xBF\x12\x6F\xA2\x13\x73\xED\x12\xF4\x64\x14\x77\xEF\x12\xEE\x85\x15\x7B\xE0\x14\xEE\x84\x14\x7F\xE7\x94",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"RType",
			L"RAttributeParameter",
			L"RAttribute",
			L"REnumMember",
			L"REnum",
			L"RStructMember",
			L"RStruct",
			L"RMessageRequest",
			L"RMessageResponse",
			L"RMessage",
			L"REventRequest",
			L"REvent",
			L"RDeclDetail",
			L"RDecl",
			L"Schema",
		};
		return results[index];
	}

	const wchar_t* ParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][RType] BEGIN ",
			L"[1][RType] END [ENDING]",
			L"[2][RType]< \"bool\" @ >",
			L"[3][RType]< \"double\" @ >",
			L"[4][RType]< \"float\" @ >",
			L"[5][RType]< \"int\" @ >",
			L"[6][RType]< \"string\" @ >",
			L"[7][RType]< NAME @ >",
			L"[8][RType]< RType \"[\" \"]\" @ >",
			L"[9][RType]< RType \"[\" @ \"]\" >",
			L"[10][RType]< RType @ \"[\" \"]\" >",
			L"[11][RAttributeParameter] BEGIN ",
			L"[12][RAttributeParameter] END [ENDING]",
			L"[13][RAttributeParameter]CPP_NAME @",
			L"[14][RAttribute] BEGIN ",
			L"[15][RAttribute] END [ENDING]",
			L"[16][RAttribute]< \"[\" @ ATT_NAME [ \"(\" RAttributeParameter \")\" ] \"]\" >",
			L"[17][RAttribute]< \"[\" ATT_NAME @ [ \"(\" RAttributeParameter \")\" ] \"]\" >",
			L"[18][RAttribute]< \"[\" ATT_NAME [ \"(\" @ RAttributeParameter \")\" ] \"]\" >",
			L"[19][RAttribute]< \"[\" ATT_NAME [ \"(\" RAttributeParameter \")\" @ ] \"]\" >",
			L"[20][RAttribute]< \"[\" ATT_NAME [ \"(\" RAttributeParameter \")\" ] \"]\" @ >",
			L"[21][RAttribute]< \"[\" ATT_NAME [ \"(\" RAttributeParameter @ \")\" ] \"]\" >",
			L"[22][REnumMember] BEGIN ",
			L"[23][REnumMember] END [ENDING]",
			L"[24][REnumMember]< NAME \",\" @ >",
			L"[25][REnumMember]< NAME @ \",\" >",
			L"[26][REnum] BEGIN ",
			L"[27][REnum] END [ENDING]",
			L"[28][REnum]< \"enum\" @ NAME \"{\" { REnumMember } \"}\" >",
			L"[29][REnum]< \"enum\" NAME \"{\" @ { REnumMember } \"}\" >",
			L"[30][REnum]< \"enum\" NAME \"{\" { REnumMember @ } \"}\" >",
			L"[31][REnum]< \"enum\" NAME \"{\" { REnumMember } \"}\" @ >",
			L"[32][REnum]< \"enum\" NAME @ \"{\" { REnumMember } \"}\" >",
			L"[33][RStructMember] BEGIN ",
			L"[34][RStructMember] END [ENDING]",
			L"[35][RStructMember]< \"var\" @ NAME \":\" RType \";\" >",
			L"[36][RStructMember]< \"var\" NAME \":\" @ RType \";\" >",
			L"[37][RStructMember]< \"var\" NAME \":\" RType \";\" @ >",
			L"[38][RStructMember]< \"var\" NAME \":\" RType @ \";\" >",
			L"[39][RStructMember]< \"var\" NAME @ \":\" RType \";\" >",
			L"[40][RStruct] BEGIN ",
			L"[41][RStruct] END [ENDING]",
			L"[42][RStruct]< \"struct\" @ NAME \"{\" { RStructMember } \"}\" >",
			L"[43][RStruct]< \"struct\" NAME \"{\" @ { RStructMember } \"}\" >",
			L"[44][RStruct]< \"struct\" NAME \"{\" { RStructMember @ } \"}\" >",
			L"[45][RStruct]< \"struct\" NAME \"{\" { RStructMember } \"}\" @ >",
			L"[46][RStruct]< \"struct\" NAME @ \"{\" { RStructMember } \"}\" >",
			L"[47][RMessageRequest] BEGIN ",
			L"[48][RMessageRequest] END [ENDING]",
			L"[49][RMessageRequest]< \"request\" \":\" @ RType \";\" >",
			L"[50][RMessageRequest]< \"request\" \":\" RType \";\" @ >",
			L"[51][RMessageRequest]< \"request\" \":\" RType @ \";\" >",
			L"[52][RMessageRequest]< \"request\" @ \":\" RType \";\" >",
			L"[53][RMessageResponse] BEGIN ",
			L"[54][RMessageResponse] END [ENDING]",
			L"[55][RMessageResponse]< \"response\" \":\" @ RType \";\" >",
			L"[56][RMessageResponse]< \"response\" \":\" RType \";\" @ >",
			L"[57][RMessageResponse]< \"response\" \":\" RType @ \";\" >",
			L"[58][RMessageResponse]< \"response\" @ \":\" RType \";\" >",
			L"[59][RMessage] BEGIN ",
			L"[60][RMessage] END [ENDING]",
			L"[61][RMessage]< \"message\" @ NAME \"{\" [ RMessageRequest ] [ RMessageResponse ] \"}\" >",
			L"[62][RMessage]< \"message\" NAME \"{\" @ [ RMessageRequest ] [ RMessageResponse ] \"}\" >",
			L"[63][RMessage]< \"message\" NAME \"{\" [ RMessageRequest @ ] [ RMessageResponse ] \"}\" >",
			L"[64][RMessage]< \"message\" NAME \"{\" [ RMessageRequest ] [ RMessageResponse @ ] \"}\" >",
			L"[65][RMessage]< \"message\" NAME \"{\" [ RMessageRequest ] [ RMessageResponse ] \"}\" @ >",
			L"[66][RMessage]< \"message\" NAME @ \"{\" [ RMessageRequest ] [ RMessageResponse ] \"}\" >",
			L"[67][REventRequest] BEGIN ",
			L"[68][REventRequest] END [ENDING]",
			L"[69][REventRequest]< \"request\" \":\" @ RType \";\" >",
			L"[70][REventRequest]< \"request\" \":\" RType \";\" @ >",
			L"[71][REventRequest]< \"request\" \":\" RType @ \";\" >",
			L"[72][REventRequest]< \"request\" @ \":\" RType \";\" >",
			L"[73][REvent] BEGIN ",
			L"[74][REvent] END [ENDING]",
			L"[75][REvent]< \"event\" @ NAME \"{\" [ REventRequest ] \"}\" >",
			L"[76][REvent]< \"event\" NAME \"{\" @ [ REventRequest ] \"}\" >",
			L"[77][REvent]< \"event\" NAME \"{\" [ REventRequest @ ] \"}\" >",
			L"[78][REvent]< \"event\" NAME \"{\" [ REventRequest ] \"}\" @ >",
			L"[79][REvent]< \"event\" NAME @ \"{\" [ REventRequest ] \"}\" >",
			L"[80][RDeclDetail] BEGIN ",
			L"[81][RDeclDetail] END [ENDING]",
			L"[82][RDeclDetail]<< !REnum @ >>",
			L"[83][RDeclDetail]<< !REvent @ >>",
			L"[84][RDeclDetail]<< !RMessage @ >>",
			L"[85][RDeclDetail]<< !RStruct @ >>",
			L"[86][RDecl] BEGIN ",
			L"[87][RDecl] END [ENDING]",
			L"[88][RDecl]<< { RAttribute @ } !RDeclDetail >>",
			L"[89][RDecl]<< { RAttribute } !RDeclDetail @ >>",
			L"[90][Schema] BEGIN ",
			L"[91][Schema] END [ENDING]",
			L"[92][Schema]< RDecl @ { RDecl } >",
			L"[93][Schema]< RDecl { RDecl @ } >",
		};
		return results[index];
	}

	Parser::Parser()
		: vl::glr::ParserBase<GuiRemoteProtocolTokens, ParserStates, GuiRemoteProtocolAstInsReceiver>(&GuiRemoteProtocolTokenDeleter, &GuiRemoteProtocolLexerData, &GuiRemoteProtocolParserData)
	{
	}

	vl::WString Parser::GetClassName(vl::vint32_t classIndex) const
	{
		return vl::WString::Unmanaged(GuiRemoteProtocolTypeName((GuiRemoteProtocolClasses)classIndex));
	}

	vl::vint32_t Parser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		return -1;
	}

	vl::Ptr<vl::presentation::remoteprotocol::GuiRpSchema> Parser::ParseSchema(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<vl::presentation::remoteprotocol::GuiRpSchema, ParserStates::Schema>(input, this, codeIndex);
	}

	vl::Ptr<vl::presentation::remoteprotocol::GuiRpSchema> Parser::ParseSchema(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<vl::presentation::remoteprotocol::GuiRpSchema, ParserStates::Schema>(tokens, this, codeIndex);
	}
}
