/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:GuiRemoteProtocol
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PRESENTATION_REMOTEPROTOCOL_AST_ASSEMBLER
#define VCZH_PRESENTATION_REMOTEPROTOCOL_AST_ASSEMBLER

#include "GuiRemoteProtocolAst.h"

namespace vl::presentation::remoteprotocol
{
	enum class GuiRemoteProtocolClasses : vl::vint32_t
	{
		Declaration = 0,
		Protocol = 1,
		RemoteProtocolDefinition = 2,
		Type = 3,
	};

	enum class GuiRemoteProtocolFields : vl::vint32_t
	{
		RemoteProtocolDefinition_declarations = 0,
	};

	extern const wchar_t* GuiRemoteProtocolTypeName(GuiRemoteProtocolClasses type);
	extern const wchar_t* GuiRemoteProtocolCppTypeName(GuiRemoteProtocolClasses type);
	extern const wchar_t* GuiRemoteProtocolFieldName(GuiRemoteProtocolFields field);
	extern const wchar_t* GuiRemoteProtocolCppFieldName(GuiRemoteProtocolFields field);

	class GuiRemoteProtocolAstInsReceiver : public vl::glr::AstInsReceiverBase
	{
	protected:
		vl::Ptr<vl::glr::ParsingAstBase> CreateAstNode(vl::vint32_t type) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::Ptr<vl::glr::ParsingAstBase> value) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, const vl::regex::RegexToken& token, vl::vint32_t tokenIndex) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::vint32_t enumItem, bool weakAssignment) override;
		vl::Ptr<vl::glr::ParsingAstBase> ResolveAmbiguity(vl::vint32_t type, vl::collections::Array<vl::Ptr<vl::glr::ParsingAstBase>>& candidates) override;
	};
}
#endif