/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Ast
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "GuiRemoteProtocolAst_Json.h"

namespace vl::presentation::remoteprotocol::json_visitor
{
	void AstVisitor::PrintFields(GuiRpDeclaration* node)
	{
		BeginField(L"name");
		WriteToken(node->name);
		EndField();
	}
	void AstVisitor::PrintFields(GuiRpMessage* node)
	{
	}
	void AstVisitor::PrintFields(GuiRpSchema* node)
	{
		BeginField(L"declarations");
		BeginArray();
		for (auto&& listItem : node->declarations)
		{
			BeginArrayItem();
			Print(listItem.Obj());
			EndArrayItem();
		}
		EndArray();
		EndField();
	}
	void AstVisitor::PrintFields(GuiRpType* node)
	{
	}

	void AstVisitor::Visit(GuiRpType* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		BeginObject();
		WriteType(L"Type", node);
		PrintFields(static_cast<GuiRpDeclaration*>(node));
		PrintFields(static_cast<GuiRpType*>(node));
		EndObject();
	}

	void AstVisitor::Visit(GuiRpMessage* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		BeginObject();
		WriteType(L"Message", node);
		PrintFields(static_cast<GuiRpDeclaration*>(node));
		PrintFields(static_cast<GuiRpMessage*>(node));
		EndObject();
	}

	AstVisitor::AstVisitor(vl::stream::StreamWriter& _writer)
		: vl::glr::JsonVisitorBase(_writer)
	{
	}

	void AstVisitor::Print(GuiRpDeclaration* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		node->Accept(static_cast<GuiRpDeclaration::IVisitor*>(this));
	}

	void AstVisitor::Print(GuiRpSchema* node)
	{
		if (!node)
		{
			WriteNull();
			return;
		}
		BeginObject();
		WriteType(L"Schema", node);
		PrintFields(static_cast<GuiRpSchema*>(node));
		EndObject();
	}

}
