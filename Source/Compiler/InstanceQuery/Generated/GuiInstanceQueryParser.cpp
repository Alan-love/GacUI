/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:GuiInstanceQuery
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "GuiInstanceQueryParser.h"

namespace vl
{
	namespace presentation
	{
		void GuiInstanceQueryParserData(vl::stream::IStream& outputStream)
		{
			static const vl::vint dataLength = 2917; // 26562 bytes before compressing
			static const vl::vint dataBlock = 256;
			static const vl::vint dataRemain = 101;
			static const vl::vint dataSolidRows = 11;
			static const vl::vint dataRows = 12;
			static const char* compressed[] = {
				"\xC2\x67\x00\x00\x5D\x0B\x00\x00\x0D\x00\x01\x82\x80\x07\x03\x82\x81\x82\x06\x89\x82\x88\x0A\x87\x06\x84\x0C\x0A\x9D\x0A\x86\x1A\x87\x16\x84\x77\x02\x09\xBF\x7B\x8C\x8B\x8E\x84\x00\x1D\x9D\x9F\x81\x9C\x8B\x90\x93\x7F\x1F\x9F\x81\x0A\x8B\x91\x85\x96\x83\x27\xA8\x8A\x91\x96\x94\x91\x9B\x90\x37\xA2\xB3\x87\x99\x9D\x93\x9C\x9B\x3F\xB8\x81\xBA\x9A\x8C\x9F\xA0\x9F\x45\xC0\x89\xA2\xAB\xA4\xA0\x98\xA3\x4D\xC8\x8F\xAA\xA3\xAC\xA5\xAA\xA7\x03\xB4\x87\xBE\x8B\xAA\x99\xA8\xAE\x09\x99\xAE\x9D\xAD\x98\xB3\xAA\xA9\x59\xD0\xA7\xA6\xB9\xB4\xA9\xB6\xAB\x6F\xD8\x82\x9A\xAF\xAE\xAF\xB4\xBB\x71\xE8\x82\x83\x0C\x94\xB2\xBF\xBA\x65\xF8\xB3\xAA\xB3\x84\x01\xBE\xC0\x7F\xF7\x81\xCB\xC9\xC1\xBC\xB7\xC1\x6E\x90\xF0\xB2\xC2\xB9\x81\x03\xC3\x8A\x8D\xD4\xDA\xB1\x84\xB9\xCC\xC4\xA0\x9F\xE2\xCE\xC2\xC5\xCC\xC3\xCD\x8F\xA6\xD1\xCA\xD3\xC9\x82\x02\xCC\xA4\x8C\xE1\xD1\xDA\xCC\xD5\xCA\x90\xA7\xB6\xDC\xD8\xDB\xD4\xDD\xD6\xDF\xB7\x9E\xC3\x88\x86\x87\x94\xDB\xD9\xA8\xA5\xC0\xFB\xD2\xE3\x84\xD9\xE4\xB2\xA3\xD0\xF5\xDB\xE1\xD5\xEA\xE5\xCD\xBA\xD6\xF9",
				"\xE0\x01\x07\xE6\xED\xD8\xB9\xD7\xF1\xE7\xE2\xE8\xF0\xF2\xD3\xC8\xE7\xF4\xEC\xED\xF6\xF0\xF7\xBD\xDC\xCA\x1F\xE0\x03\x04\xFA\xF8\xBF\xF8\xC1\xE2\xFC\x07\xFB\xF7\xFF\xF1\x40\x89\x7E\x80\xFB\x41\x86\x83\x80\x07\x85\x88\x83\x82\x0A\x8D\x8C\x72\x78\x00\x63\x5A\x7B\x78\xEC\x44\x8F\x81\x82\x17\x8C\x89\x86\x83\xDB\x56\x8D\x84\x86\x1F\x9A\x81\x8B\x6D\x0E\x3E\x70\x89\x78\x27\xA8\x7B\x7B\x84\x0E\x52\x86\x78\x85\x13\xBA\x7B\x87\x8C\x23\xB4\x88\x8A\x88\x37\x9C\x89\x8F\x6E\x10\x26\x88\x8F\x47\x11\x3E\x8A\x8E\x8A\x30\xAF\x82\x8D\x8D\x48\xBB\x89\x90\x91\x47\x8A\x9E\x90\x93\xE2\x52\x04\x7F\x04\x42\xB6\x80\x95\x8A\x15\x98\x91\x8E\x87\xCA\x54\x04\x7D\x05\x55\x8B\x9A\x42\x05\x61\x8F\x99\x97\x8F\x67\x83\x99\x9A\x95\x6B\xA2\x9B\x96\x96\x46\x9C\x97\x94\x9A\x09\x57\x05\x9B\x9C\x6A\xAF\x94\x9D\x9C\x70\xA5\x7E\x9D\x7A\x7C\xBB\x9F\x9F\x8A\x81\xB9\x96\x40\x44\x2E\x83\xA5\x92\xA2\x4D\xB8\x9C\x9B\x84\x19\x34\x7A\x07\x9D\xD4\x5B\x04\xA6\x9E\x86\x8C\xA2\x9C\x75\x1C\x17\xA5\xA3\xA3\x9F\xAE\x91\xAA\x99\x98\xA0\xAA\xA5\x9F\x80\x8A\xA2\x45\xA2",
				"\x02\x5E\x0E\xA7\xA9\x82\xA9\xA2\x43\x07\xAF\xB2\xA4\xA3\x40\x20\x35\xA7\xAE\xAD\x8B\xBC\xAD\xA1\x9B\xA4\xA3\xAE\xA2\xA8\xB0\x99\xA2\x41\x08\xF4\x62\x0A\xAD\xAF\xBB\x8D\xBC\xB0\x00\x23\x0B\xBF\xAD\xA9\xD6\x64\x04\x7D\x09\xD2\xA2\x74\x44\xAB\xCE\x93\xB2\xB0\xB0\xC3\x81\xB5\xB2\xA9\xBE\x9B\xA4\xB6\xB8\xE5\xA8\xAD\xB6\xB9\x06\x67\x04\x7C\x0A\xD9\xBD\x69\x09\xBC\xB1\xAB\xBA\xBB\xB3\xDC\x6A\x04\x7F\x0A\xF4\x86\xB6\xBD\xBD\xF8\xAC\xB3\xB8\xB1\xBC\xAC\x04\x7D\x0B\xFD\xA4\xBF\xBE\xBF\x01\xF7\xBE\xB7\xC0\xE8\x8E\xBE\x08\x7D\x16\x5C\xBD\xC3\x6F\x30\x09\xC4\xC3\xC2\x0A\xD7\xCC\xC3\xC3\xE9\x80\xC0\xC8\xC7\x1B\xDE\xCD\xC7\xC8\xCF\xB1\x04\x7E\x0C\x1A\xCA\x73\x0D\xCB\xE1\xB1\xC0\xBA\x42\x34\x34\x75\x0E\x42\x62\x5F\xB7\xBA\xCC\x3B\xF3\xCD\xCF\xCF\x2F\xB7\x04\x7C\x0E\x30\xCA\x49\x0D\xD1\x40\xD0\xCC\xCE\x41\x3A\x34\x7B\x0C\xCE\x3E\xFA\xC2\xD6\xD2\x51\xD4\xD9\xD1\xC8\x1F\xE2\x7D\x0C\xD2\x53\xD8\xD7\xCA\xC0\x5E\xE5\xC8\xCB\xD8\xE2\x7E\x0C\xD6\xD5\x5D\xC1\x4F\x0C\x7D\x40\x10\xD7\xD4\xC9\x11\xE6\xC2\xD8\xD8\x70\xCB\xDA\xA2\x10\xF4",
				"\x43\x17\xDA\x40\x44\x3B\xD5\xDD\xD5\x61\xF1\xD4\xDA\xC3\x74\xF2\xD2\xE1\xE1\x83\xE2\xC2\x79\x11\xF4\x46\x1E\xDC\x00\x47\x0F\xE9\xE1\xD6\xF7\x88\x14\x7D\x12\x6E\xE9\xD6\xE2\xDD\x81\xDC\xEF\xDF\xDB\xCF\x8B\x14\x7C\x13\x8F\xCD\x12\xE4\xE2\xA8\xF7\xBE\x10\x7D\x4F\x19\xE8\xDB\xEB\x9D\xC0\xEF\xE6\xE6\x93\xDF\xD4\xE3\xED\x00\xD1\x17\xE8\xEE\x94\xCA\xEC\xEE\xED\xBE\xFF\x62\x17\xEE\x00\xD3\x14\x7C\x15\xAE\xF1\xE0\xE9\xED\x73\xFF\xED\xF1\xF0\xB7\x56\x14\x7F\x15\x8F\xD8\x14\xF1\xEF\xD8\xC0\xF9\xF7\xF3\xDB\xC7\xEE\xF2\xF7\xD0\xFB\x69\x17\xF5\xDA\xE5\xFC\xF6\xF9\xE0\xCC\xC2\x3D\xF2\x01\x46\x71\xE1\x4C\x0C\x49\x4F\x69\x5D\x39\xC3\x4E\xF8\x78\xF7\xC0\x09\xFC\xFC\x0A\x44\x74\x6B\xFC\x77\x2D\x48\xFF\x09\x27\x33\xBA\x39\x7B\x7F\x27\x31\x7E\x41\x7E\x79\x38\x00\xA4\x31\x26\xF9\x61\x32\x02\xC3\x3D\x2A\x07\x89\x3A\x80\x09\x8A\x21\x01\xF7\x21\x83\xAE\x13\x87\x20\x15\x9D\x29\x4C\x06\x35\x2F\x98\x35\x7A\x20\x08\x87\x47\x00\x86\x26\x82\xF0\x24\x81\x80\x27\x27\x85\xFB\x5D\x2F\x85\x07\xA7\x27\x80\x1E\x8A\x20\x5F\x75\x2D\x85\xEB\x18\x84",
				"\x24\x1F\x81\x22\x0C\xD7\x3D\x83\xBA\x01\x88\x00\x3B\x97\x2D\x0F\xB1\x26\x85\x96\x6B\x83\x20\x4B\x91\x85\x99\x35\x87\x83\x93\x14\x88\x3C\x23\x82\x87\x49\x51\x8C\x89\x90\x17\x8E\x87\x56\x9A\x88\x49\x5F\x8D\x8B\x31\xA2\x8E\x8B\x67\x9D\x20\x19\xE5\x8A\x8D\x34\x9C\x23\x8D\x6C\x9B\x20\x1C\xF1\x83\x8E\x36\xB5\x8D\x8C\x77\x9D\x89\x1E\xCC\x8B\x8F\x2C\xA5\x87\x86\x29\x26\x8A\x42\x7B\x8C\x8A\x3A\xAE\x8B\x23\x43\x89\x84\x8E\x4F\x82\x21\x42\xAD\x8F\x8F\x24\x29\x90\x0D\x87\x9F\x1E\x1C\x82\x91\x21\x84\x94\x91\x1F\xD2\x86\x63\x1F\xA1\x27\x88\x8E\x8F\x8C\x25\x92\x95\x2F\x4D\xA6\x88\x92\x68\x88\x97\x23\xB0\x87\x94\x56\xA9\x96\x95\xAB\x96\x85\x2B\xB2\x9F\x94\x5A\xB1\x95\x8A\x24\x21\x95\x17\xBA\x9C\x89\x24\x81\x90\x3C\x47\x8A\x91\x47\x3C\x91\x26\x62\xA7\x26\x97\xBF\x8C\x93\x0C\xA5\x9A\x93\x66\xAA\x92\x94\xCF\x92\x8E\x33\xB0\x90\x9A\x6A\x92\x99\x9A\xFF\x06\x95\x2D\xB8\x9B\x9A\x2C\xA1\x88\x9B\xDA\x97\x96\x37\xB3\x9C\x9B\x8E\x16\x97\x2E\x47\x9E\x38\x0F\x94\x97\x9C\xD2\x29\x99\x84\xD8\x88\x99\x40\x72\x97\x3B\x23\x87\x88\x82\x65\x4F",
				"\x9F\x3A\xF1\x9A\x87\x1C\x89\x27\x9E\xDF\x96\x99\x36\xD3\x96\x97\x6A\x85\xA7\x9A\x02\xA1\x9C\x47\x45\x88\x9C\x85\x2A\x9A\x89\xEC\x9F\x96\x3B\x8E\xA0\x9E\x81\xB4\x9C\x9E\xCA\x80\x00\x40\xA4\x2C\xA1\x89\x89\x27\xA1\xFF\x74\x93\x45\xFE\x96\x21\x8D\xA1\x26\x98\xB9\x82\xA5\x3F\x97\x95\xA5\x8A\x87\xA7\x1F\x23\xAC\xA7\x40\x26\xA2\x9C\x30\xA4\x9B\x9C\xDD\x96\xA5\x4E\xF1\x86\xA1\x72\xBD\xA0\xA7\x35\xBC\xA4\x42\xAF\xAA\xA1\xA1\xBE\xA6\xA8\x40\xBF\xA6\x4E\xC1\xA2\xA9\xA2\x83\xA0\x9C\x04\xA7\xAB\x53\x89\xA1\xAB\xA4\x88\xAB\xA9\x0B\xAC\x7D\x3D\x94\xAB\x9E\x81\xB9\x7B\x88\x19\xA0\xA5\x03\xAA\xA9\x20\x8C\x99\x87\x9F\x5D\x3F\xA8\x49\x83\x22\xAC\xF0\x28\xA1\x24\x31\xAD\xA0\x5A\xCC\x90\xAB\xBA\x94\xAE\xAE\x44\xB5\xA8\x56\xD7\xA2\xA9\xA9\xAF\xA1\x7F\x66\xA0\x88\x57\x90\xA8\x9A\xC0\xAB\xAA\x20\x6D\xB7\x3B\x5B\x9D\x21\xAE\x8F\xAD\xA6\x80\x2B\xB2\xAE\x41\x09\xB5\x98\xB2\x86\x21\xB0\x9F\x8A\x20\x4D\x9C\x2B\xB0\xCE\x96\xB3\x20\x98\xBD\x22\x3D\xAE\xA2\xAB\xC6\x89\x3B\xB4\x74\xB7\xAE\x6A\xF9\xA8\xAE\xA9\x8E\xAF\xB5\x7A\xBD\xAC\x6C\xAD",
				"\xB6\xAA\xBF\xAE\xB1\xB6\x42\xBD\xB3\x46\x1B\x8F\xA4\xDE\x92\xAE\xB7\xB5\xA0\xBB\x5E\xFF\x12\xB9\xBE\x85\xBA\xA8\xC7\xBC\xA5\x72\xF1\x8B\xB8\x36\x87\x8A\x82\x0A\x33\x3E\x4C\x82\x22\xBA\xC9\x83\x25\xBA\x8E\xB7\xB9\x57\x5C\x02\xA3\x5F\xAD\x9A\x20\x43\x94\x9F\x17\xC2\xBD\x87\xF0\x83\x92\x83\x0A\x25\xBD\x64\x85\x38\xBC\xF9\x7D\x7D\xBB\x01\x2C\x81\x20\xF2\xBA\xA2\xF8\xB5\xB8\xBE\xA0\x89\xBE\x7E\x9F\xA3\xB0\xB6\xAD\xBC\x85\xFF\xB0\x89\x80\x8D\x91\xBB\xFD\x86\x20\xBB\x04\xC9\x20\x82\xAE\x3A\x20\xFB\x2E\xB9\x21\x0E\xC0\xC0\x84\x86\xCC\xBC\x02\x94\xC2\x20\xE3\xB7\xC1\x40\x19\xCF\xC0\x83\x3D\x3E\xC2\x1D\xC3\x23\x87\x86\x24\xBC\x85\x23\xC3\x20\x25\xC9\x21\x84\x24\xCA\xC2\x00\x2B\xC0\xC5\x2D\xCF\xC6\x40\x29\xC7\xB3\xF3\xA0\xC2\xC2\x35\xD8\x93\x80\x8C\xC5\xAC\x1B\xEC\xC1\xC4\x02\x25\x44\x7C\x8B\xC9\x24\x72\x34\x3F\x23\x32\xC1\x91\x39\x74\x3D\x86\x29\x70\xBE\x1C\xF4\x22\xBA\xCA\x70\xB7\x1C\xFA\x1F\x8B\x62\xF0\xA8\x1C\x7D\x74\x98\x5A\xF8\xA9\x1C\x3E\x43\x9D\x50\x7C\xEA\x14\x3F\xFC\x5E\x48\xBE\xEB\x05\xCF\x98\x76\xBC\x1C\x30",
				"\xCA\x26\x52\xF0\xAD\x1F\x96\x8A\x29\x56\xF8\xAE\x1B\xCE\x09\x2A\x58\x7C\xEF\x16\xCA\x85\x33\x58\xBE\xF0\x1D\xCD\x42\x7C\x50\xBF\x78\x34\x3A\x0B\xF6\xA2\xBA\x7D\xFA\x7E\xCD\x09\x5F\x23\x88\x1F\x34\x9E\x30\x9D\x64\x95\xEE\x9F\x89\xB4\x94\xCB\xBD\x32\xA9\x7F\x36\xF1\xB6\xBC\x3B\xF4\xA0\xAE\x78\x5F\x8D\xA2\xC4\x9A\xD3\x76\x30\xD6\x63\x47\x27\xCB\x2E\xD9\x40\x04\xC6\x12\xAC\x7A\x72\x3D\x84\xBE\x22\x6D\x46\x20\xA2\xDD\x34\x7D\xA5\xD1\x21\x20\x7D\xC0\x74\x47\x8A\xD2\x42\x67\xC8\xD7\x35\xE1\x2E\xBE\xF9\x67\x88\xA4\x8F\x2A\xAA\xEE\x1F\xB9\x20\x47\x91\xC2\x44\x93\x5D\x93\xC2\x44\xC9\xB1\x1F\x30\xCD\x8E\x9A\x72\xDA\x81\x2C\xD1\x90\xDC\x2E\x57\xB1\x93\x4D\xDB\x80\x02\xCD\xBB\xB2\xCB\xD6\x42\x67\xD1\xD6\x4E\xF7\x31\xC9\xDD\x36\xBD\x9D\xDB\xD0\x76\x73\xFB\xC1\x25\xD1\x56\x62\xB5\x63\xD5\xD8\x8B\x6C\xD8\xBC\xF6\xBB\x59\x71\x54\x32\xD3\x86\x0A\x26\x4E\xF0\xAE\x5D\xB5\xF7\x57\xD7\x81\x20\x48\xBE\xF0\x4B\xE0\xC0\x0D\xE2\x20\x2A\x70\xBF\xCF\x03\xE0\x76\xAF\x86\x2D\x46\xF8\xBA\x5A\xE2\x0C\x6E\xCA\x41\x1B\xED\xDD\xEF\x5F\x26\xE2",
				"\x06\x28\xE1\x77\x84\xDF\xC7\x17\x5C\xC6\x20\x28\xEE\xE2\x7D\x99\x67\xC6\x45\x49\xB2\xB8\x31\xF5\xE2\x7D\xB7\x65\xE6\x5E\x7F\xDE\x32\xC3\xCA\x21\xC7\xDD\xBD\x69\x5F\xDA\x77\xE1\x2D\xF2\xA3\xD6\x7C\xD3\x21\xB5\x4C\xEA\xE7\x4F\xE1\x20\xD2\x83\x2B\xD9\x84\x01\x0D\xD9\xE2\x33\xE8\xC0\x89\x2A\xEB\x80\x25\xD9\x25\x7A\x60\xE7\x6E\x2A\xE6\x7E\x63\xDC\xE6\xBE\x7D\x66\xE9\xBD\x80\x04\xED\x19\xF6\xB9\x72\x51\xE0\x00\xE6\x71\xE8\x51\x7E\xE9\xE2\xAB\x1F\x22\x75\xDC\xDC\x34\xDA\xBB\xC3\x25\xED\x5E\xF6\xBE\xE9\x62\xE6\x3A\x31\xD9\xE7\x50\x07\xF6\xBF\xEA\x7B\xE2\x3D\x55\x47\xF3\x20\x75\xF2\xE4\x7C\xD0\x08\xEB\xDE\x22\xDF\xF1\x02\x31\xF0\xD4\xDD\xB3\x78\xC6\xFD\x34\x56\x16\x7D\xEF\xDF\xF6\xB8\x78\xC2\xCA\x3B\xDE\x65\xE9\x22\xE8\x82\x2D\xEB\x94\x15\x0B\x59\xC8\x41\xF6\x42\x39\xE1\x90\xE9\x66\xF7\x23\x7A\xD8\xF1\x40\x5A\xD3\x21\x48\x70\xBC\x7A\xB7\xF5\x52\x42\x2B\xF1\x90\xEB\x71\xE8\xD1\xC1\xE9\x22\xE1\xBD\xF6\xBF\x2D\x0F\x73\xF9\x02\x24\xF9\x4A\x5C\xB1\xEE\x2F\x0B\x5E\xF1\xA3\xF0\xBF\x17\x27\xDF\x59\x7C\xFE\xEA\x20\xD8\xEC\xF6",
				"\x7D\xE2\x0C\xFA\xEE\x1D\xCF\xFB\x01\x21\xFD\x40\x34\xF9\x25\x32\x25\xFA\x3C\x0A\xE8\xFC\x00\x20\xF7\xEE\xF8\xA8\x0D\xF2\xBF\x38\xE0\xD5\x8A\x24\xFE\xC9\xDD\xBA\x0D\xF8\x77\x1B\x2C\x7B\x7F\x09\x1D\x7F\x9B\x72\x51\x6C\x01\x80\xBB\x18\x30\x71\x78\x7A\xAD\x26\x5F\x6E\x0F\x7E\xF7\x2E\x80\x01\x1E\x7D\x12\x51\x07\x3E\x63\x10\x75\x0B\x2C\x14\x80\x00\xFB\x6D\x5D\x76\x09\x81\x02\x1A\x07\xB0\x79\x78\xF0\x5B\x07\x0A\x86\x1D\x15\x32\x7F\xB1\x76\x10\xAD\x7F\x11\x7D\x09\x82\xCA\x13\x65\x2C\x83\x7B\xF6\x5F\x07\x32\x8F\x11\x2F\x31\x77\xB9\x73\x10\x97\x72\x51\x81\x02\x81\x00\x3D\x83\x02\x16\x81\xBF\x44\x08\x22\x81\x10\x88\x0B\x2C\x44\x81\x10\x1F\x82\x51\x89\x09\x84\x00\x0D\x08\xCB\x26\x84\x01\x16\x80\xE0\x6E\x6E\xBB\x1F\x84\xC7\x2F\x69\x5A\x86\x1D\xE7\x7E\x83\xF6\x5E\x08\x8F\x31\x86\x45\x86\x5F\x8F\x0A\x55\x91\x0B\x2C\x66\x8E\x84\xF6\x52\x09\x5A\x54\x09\xCB\x22\x70\xD9\x7D\x5D\x95\x02\x85\xDC\x1C\x73\xF4\x62\x10\x74\x82\x7E\xF0\x59\x09\x78\x82\x1E\x44\x3A\x76\x7C\x86\x83\xF0\x5D\x09\x81\x8D\x1B\x4F\x34\x88\x01\x11\x71\xF5\x7D",
				"\x5D\xA1\x02\x84\xB7\x16\x36\x8C\x80\x00\x8E\x8E\x7F\x12\x54\x0A\x92\x8B\x1B\x57\x75\x89\x97\x87\x80\xBF\x47\x0A\x9B\x86\x1D\x69\x7B\x87\x01\x1A\x7F\x02\x11\x7F\x12\x5A\x0A\xA3\x81\x37\xA8\x81\x10\x06\x30\x5F\xAD\x02\x85\xB1\x0B\x2C\xAF\x80\x00\x0C\x8D\x5D\xB2\x02\x85\xB6\x0B\x2C\x1F\x7F\x88\x12\x57\x0B\xAD\x8F\x11\x70\x76\x8A\x00\x0F\x8B\x98\x8F\x4B\xBA\x03\x8C\x0A\x1A\x04\xDC\x78\x8C\xA0\x81\x48\xBD\x0C\x8C\x09\x13\x78\xC6\x83\x80\xA9\x86\x5F\xC0\x04\x8D\x2F\x28\x8D\xB0\x86\x5F\xC3\x02\x85\xC7\x0B\x2C\xDE\x88\x8B\xF6\x58\x0C\x52\x8C\x0C\xCB\x21\x8B\x06\x1F\x89\x59\x86\x72\x0A\x19\x8B\x03\x10\x8D\xEF\x81\x3E\xD6\x18\x65\xED\x26\x5F\xCD\x0F\x38\xF8\x83\x10\xEC\x82\x51\xCE\x0A\x55\xD0\x0B\x2C\xFD\x82\x10\xF2\x8F\x4B\xD1\x0A\x55\xD3\x0B\x2C\x2B\x85\x87\x12\x54\x0D\xF7\x6C\x1D\x94\x7A\x63\x09\x1D\x90\x7E\x8D\x5D\xD9\x01\x91\xE2\x15\x7A\x06\x1F\x45\x16\x9B\x7E\xF6\x5E\x0D\x1A\x9D\x1B\xC6\x7D\x91\x0A\x14\x83\x03\x14\x73\xDD\x53\x0E\x8F\x3C\x32\xF0\x5C\x1D\x3E\x4B\x68\x32\x93\x93\x2A\x1B\x68\xBC\x6B\x4C\xB7\x73\x69",
				"\x59\x58\x6C\x47\x6F\x6C\x38\x99\x7A\x16\x31\x41\xB9\x68\x13\x43\x91\x12\x43\x40\x69\x47\x9F\x68\x78\x75\x75\x71\x79\x12\x95\x62\x7F\x11\x48\x69\x1E\x12\x95\x1B\x15\x70\xDC\x71\x95\x8B\x6B\x47\x00\x0D\x47\x5F\x40\x69\x5D\x9F\x11\xA4\x60\x96\x47\x6F\x95\x52\x81\x41\x5F\x49\x12\xCD\x55\x12\x69\x9C\x11\xC2\x51\x41\x6D\x9F\x11\xC2\x50\x69\x71\x90\x97\x47\x63\x97\xF7\x69\x12\xBC\x40\x00\xC4\x4D\x43\x29\x10",
			};
			vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
		}

		const wchar_t* ParserRuleName(vl::vint index)
		{
			static const wchar_t* results[] = {
				L"QPrimaryFragment",
				L"QPrimaryAttributed",
				L"QPrimary",
				L"Query0",
				L"Query1",
				L"Query2",
				L"QueryRoot",
			};
			return results[index];
		}

		const wchar_t* ParserStateLabel(vl::vint index)
		{
			static const wchar_t* results[] = {
				L"[0][QPrimaryFragment] BEGIN ",
				L"[1][QPrimaryFragment] END [ENDING]",
				L"[2][QPrimaryFragment]< \"*\" @ [ \".\" NAME ] >",
				L"[3][QPrimaryFragment]< \"*\" [ \".\" @ NAME ] >",
				L"[4][QPrimaryFragment]< \"*\" [ \".\" NAME @ ] >",
				L"[5][QPrimaryFragment]< NAME @ [ \".\" NAME ] >",
				L"[6][QPrimaryFragment]< NAME [ \".\" @ NAME ] >",
				L"[7][QPrimaryFragment]< NAME [ \".\" NAME @ ] >",
				L"[8][QPrimaryAttributed] BEGIN ",
				L"[9][QPrimaryAttributed] END [ENDING]",
				L"[10][QPrimaryAttributed]<< !QPrimaryFragment @ >>",
				L"[11][QPrimaryAttributed]<< \"@\" @ [ NAME ] \":\" !QPrimaryFragment >>",
				L"[12][QPrimaryAttributed]<< \"@\" [ NAME @ ] \":\" !QPrimaryFragment >>",
				L"[13][QPrimaryAttributed]<< \"@\" [ NAME ] \":\" !QPrimaryFragment @ >>",
				L"[14][QPrimaryAttributed]<< \"@\" [ NAME ] \":\" @ !QPrimaryFragment >>",
				L"[15][QPrimary] BEGIN ",
				L"[16][QPrimary] END [ENDING]",
				L"[17][QPrimary]<< \"(\" !QueryRoot \")\" @ >>",
				L"[18][QPrimary]<< \"(\" !QueryRoot @ \")\" >>",
				L"[19][QPrimary]<< \"(\" @ !QueryRoot \")\" >>",
				L"[20][QPrimary]<< \"/\" !QPrimaryAttributed @ >>",
				L"[21][QPrimary]<< \"/\" @ !QPrimaryAttributed >>",
				L"[22][QPrimary]<< \"//\" !QPrimaryAttributed @ >>",
				L"[23][QPrimary]<< \"//\" @ !QPrimaryAttributed >>",
				L"[24][Query0] BEGIN ",
				L"[25][Query0] END [ENDING]",
				L"[26][Query0]< Query0 @ QPrimary >",
				L"[27][Query0]< Query0 QPrimary @ >",
				L"[28][Query0]<< !QPrimary @ >>",
				L"[29][Query1] BEGIN ",
				L"[30][Query1] END [ENDING]",
				L"[31][Query1]< Query1 \"*\" @ Query0 >",
				L"[32][Query1]< Query1 \"*\" Query0 @ >",
				L"[33][Query1]< Query1 \"^\" @ Query0 >",
				L"[34][Query1]< Query1 \"^\" Query0 @ >",
				L"[35][Query1]< Query1 @ \"*\" Query0 >",
				L"[36][Query1]< Query1 @ \"^\" Query0 >",
				L"[37][Query1]<< !Query0 @ >>",
				L"[38][Query2] BEGIN ",
				L"[39][Query2] END [ENDING]",
				L"[40][Query2]< Query2 \"+\" @ Query1 >",
				L"[41][Query2]< Query2 \"+\" Query1 @ >",
				L"[42][Query2]< Query2 \"-\" @ Query1 >",
				L"[43][Query2]< Query2 \"-\" Query1 @ >",
				L"[44][Query2]< Query2 @ \"+\" Query1 >",
				L"[45][Query2]< Query2 @ \"-\" Query1 >",
				L"[46][Query2]<< !Query1 @ >>",
				L"[47][QueryRoot] BEGIN ",
				L"[48][QueryRoot] END [ENDING]",
				L"[49][QueryRoot]<< !Query2 @ >>",
			};
			return results[index];
		}

		Parser::Parser()
			: vl::glr::ParserBase<GuiInstanceQueryTokens, ParserStates, GuiInstanceQueryAstInsReceiver, ParserStateTypes>(&GuiInstanceQueryTokenDeleter, &GuiInstanceQueryLexerData, &GuiInstanceQueryParserData)
		{
		};

		vl::vint32_t Parser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
		{
			return -1;
		};

		vl::Ptr<vl::presentation::GuiIqQuery> Parser::ParseQueryRoot(const vl::WString& input, vl::vint codeIndex) const
		{
			 return Parse<ParserStates::QueryRoot>(input, this, codeIndex);
		};

		vl::Ptr<vl::presentation::GuiIqQuery> Parser::ParseQueryRoot(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
		{
			 return Parse<ParserStates::QueryRoot>(tokens, this, codeIndex);
		};
	}
}
