<Resource>
  <Instance name="ThemeResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::TestTheme" xmlns:x="testtheme::*">
      <ThemeTemplates Name="TestSkin">
      </ThemeTemplates>
    </Instance>
  </Instance>

  <Doc name="DocLetters">
    <Doc>
      <Content>
        <p>
          <font size="36">
            <nop>abcdefg</nop><sp/>
            <nop>hijklmn</nop><sp/>
            <nop>opqrst</nop><sp/>
            <nop>uvwxyz</nop><sp/>
          </font>
        </p>
        <p>
          <font size="36">
            <nop>abcdefg</nop><sp/>
            <nop>hijklmn</nop><sp/>
            <nop>opqrst</nop><sp/>
            <nop>uvwxyz</nop><sp/>
          </font>
        </p>
        <p>
          <font size="36">
            <nop>abcdefg</nop><sp/>
            <nop>hijklmn</nop><sp/>
            <nop>opqrst</nop><sp/>
            <nop>uvwxyz</nop><sp/>
          </font>
        </p>
      </Content>
    </Doc>
  </Doc>

  <Script name="ViewModel">
    <Workflow><![CDATA[
      module viewmodel;
      using system::*;
      using presentation::*;

      namespace demo
      {
        class StyleItem
        {
          prop Color : ItemColor = cast Color "#000000" {not observe}

          new(itemColor : Color) { this.ItemColor = itemColor; }
        }

        class StyleGroup
        {
          prop Name : string = "" {not observe}
          prop Items : observe StyleItem^[] = null {not observe}

          new(name : string, items : observe StyleItem^[]) { this.Name = name; this.Items = items; }
        }
      }
    ]]></Workflow>
  </Script>

  <Instance name="StyleItemTemplateResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::StyleItemTemplate">
      <ref.Parameter Name="ViewModel" Class="demo::StyleItem"/>
      <TextListItemTemplate ref.Name="self" MinSizeLimitation="LimitToElementAndChildren" PreferredMinSize="x:72 y:72">
        <Bounds AlignmentToParent="left:0 top:0 right:0 bottom:0">
          <SolidBorder Color="#FFFFFF"/>
          <Bounds AlignmentToParent="left:1 top:1 right:1 bottom:1">
            <SolidBackground Color-eval="ViewModel.ItemColor"/>
          </Bounds>
        </Bounds>
      </TextListItemTemplate>
    </Instance>
  </Instance>

  <Instance name="MainWindowResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::TestWindow">
      <ref.Members><![CDATA[
        var styleGroups : observe StyleGroup^[] = {
          new StyleGroup^(
            "First",
            {
              new StyleItem^(cast Color "#FF0000");
              new StyleItem^(cast Color "#FF8000");
              new StyleItem^(cast Color "#FFFF00");
              new StyleItem^(cast Color "#00FF00");
              new StyleItem^(cast Color "#00FF80");
              new StyleItem^(cast Color "#0000FF");
              new StyleItem^(cast Color "#FF00FF");
            }
          );
          new StyleGroup^(
            "Second",
            {
              new StyleItem^(cast Color "#000000");
              new StyleItem^(cast Color "#800000");
              new StyleItem^(cast Color "#808080");
              new StyleItem^(cast Color "#FFFFFF");
            }
          );
        };
      ]]></ref.Members>
      <Window ref.Name="self" Text="MainWindow" ClientSize="x:640 y:480">
        <att.BoundsComposition-set PreferredMinSize="x:320 y:240"/>
          <RibbonTab>
            <att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
            <att.Pages>
              <RibbonTabPage Text="Edit">
                <att.ContainerComposition-set PreferredMinSize="y:110"/>
                <att.Groups>
                  <RibbonGroup Text="Style" LargeImage-uri="res://ToolbarImages/EditableLarge">
                    <att.Items>
                      <BindableRibbonGalleryList ref.Name="styleGallery" ItemTemplate="demo:StyleItemTemplate" MinCount="2" MaxCount="5" VisibleItemCount="5" env.ItemType="demo::StyleGroup^">
                        <att.ItemSource-bind>self.styleGroups</att.ItemSource-bind>
                        <att.GroupTitleProperty>Name</att.GroupTitleProperty>
                        <att.GroupChildrenProperty>Items</att.GroupChildrenProperty>

                        <att.SubMenu-set>
                          <RibbonToolstripHeader Text="Header A"/>
                          <MenuItemButton Text="Item A1"/>
                          <MenuItemButton Text="Item A2"/>
                          <MenuItemButton Text="Item A3"/>
                          <RibbonToolstripHeader Text="Header B"/>
                          <MenuItemButton Text="Item B1"/>
                          <MenuItemButton Text="Item B2"/>
                          <MenuItemButton Text="Item B3"/>
                        </att.SubMenu-set>
                      </BindableRibbonGalleryList>
                    </att.Items>
                  </RibbonGroup>
                </att.Groups>
              </RibbonTabPage>
            </att.Pages>
          </RibbonTab>
      </Window>
    </Instance>
  </Instance>
</Resource>