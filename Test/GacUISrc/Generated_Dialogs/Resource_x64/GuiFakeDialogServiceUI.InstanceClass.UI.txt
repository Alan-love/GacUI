================================(1/2)================================
module <constructor>vl::presentation::controls::fake_dialog_service::GuiMessageBoxWindow;
using presentation::controls::Gui*;
using presentation::elements::Gui*Element;
using presentation::compositions::Gui*Composition;
using presentation::compositions::Gui*;
using presentation::templates::Gui*;
using system::*;
using system::reflection::*;
using presentation::*;
using presentation::Gui*;
using presentation::controls::*;
using presentation::controls::list::*;
using presentation::controls::tree::*;
using presentation::elements::*;
using presentation::elements::Gui*;
using presentation::elements::text::*;
using presentation::compositions::*;
using presentation::templates::*;
using presentation::theme::*;

namespace vl
{
    namespace presentation
    {
        namespace controls
        {
            namespace fake_dialog_service
            {
                class GuiMessageBoxWindowConstructor
                {
                    @cpp:Protected
                    var self : ::vl::presentation::controls::fake_dialog_service::GuiMessageBoxWindow* = null of (::vl::presentation::controls::fake_dialog_service::GuiMessageBoxWindow*);

                    @cpp:Protected
                    func <vl-presentation-controls-fake_dialog_service-GuiMessageBoxWindow>Initialize(<this> : ::vl::presentation::controls::fake_dialog_service::GuiMessageBoxWindow*) : (::system::Void)
                    {
                        (self = <this>);
                        {
                            (self.ClientSize = {x : 240; y : 120;} of (::presentation::Size));
                        }
                        {
                            (self.Text = "MessageBox");
                        }
                    }

                    new ()
                    {
                    }
                }
            }
        }
    }
}

================================(2/2)================================
module <instance>vl::presentation::controls::fake_dialog_service::GuiMessageBoxWindow;
using presentation::controls::Gui*;
using presentation::elements::Gui*Element;
using presentation::compositions::Gui*Composition;
using presentation::compositions::Gui*;
using presentation::templates::Gui*;
using system::*;
using system::reflection::*;
using presentation::*;
using presentation::Gui*;
using presentation::controls::*;
using presentation::controls::list::*;
using presentation::controls::tree::*;
using presentation::elements::*;
using presentation::elements::Gui*;
using presentation::elements::text::*;
using presentation::compositions::*;
using presentation::templates::*;
using presentation::theme::*;

namespace vl
{
    namespace presentation
    {
        namespace controls
        {
            namespace fake_dialog_service
            {
                @cpp:Friend(typeof(GuiMessageBoxWindowConstructor))
                class GuiMessageBoxWindow : ::presentation::controls::GuiWindow, GuiMessageBoxWindowConstructor
                {
                    new* ()
                        :::presentation::controls::GuiWindow(::presentation::theme::ThemeName::Window)
                    {
                        var <resource> = ::presentation::IGuiResourceManager::GetResourceManager().GetResourceFromClassName("vl::presentation::controls::fake_dialog_service::GuiMessageBoxWindow");
                        var <resolver> = new (::presentation::GuiResourcePathResolver^)(<resource>, <resource>.WorkingDirectory);
                        this.SetResourceResolver(<resolver>);
                        this.<vl-presentation-controls-fake_dialog_service-GuiMessageBoxWindow>Initialize(this);
                    }

                    delete
                    {
                        FinalizeInstanceRecursively(this of (::presentation::controls::GuiControlHost*));
                    }
                }
            }
        }
    }
}

